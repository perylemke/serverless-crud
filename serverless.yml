service: serverless-crud

frameworkVersion: "3"

provider:
  name: aws
  stage: ${opt:stage, "dev"}
  runtime: nodejs18.x
  region: us-east-1
  environment:
    tableName: ${self:custom.tableName}
  httpApi:
    cors: true
  iam:
    role:
      name: crud-role-${self:provider.stage}
      statements:
        - Effect: 'Allow'
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "*"
custom:
    tableName: "contacts-${self:provider.stage}"
    dynamodb:
        stages:
            - local
        start:
            docker: true
            port: 8000
            inMemory: true
            migrate: true
        migration:
            dir: offline/migrations
    jest:

package:
  excludeDevDependencies: true
  individually: true

functions: ${file(yml/functions.yml):functions}

resources:
  Resources:
    ContactDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      # DeletionPolicy: Delete
      Properties:
        TableName: "contacts-${self:provider.stage}"
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins: ${file(yml/plugins.yml):plugins}